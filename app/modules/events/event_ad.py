import markup

from aiogram import types
from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router()

class eventState(StatesGroup):
    sendKonkurs = State()

def loadModule():
    
    markup.mainMenu_btns = [[types.KeyboardButton(text = "üî•–õ—É—á—à–∞—è —Ä–µ–∫–ª–∞–º–∞üî•")]] + markup.mainMenu_btns

    markup.mainMenu = types.ReplyKeyboardMarkup(
        keyboard = markup.mainMenu_btns, 
        resize_keyboard = True,
        input_field_placeholder = "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é"
    )


@router.message(F.text.lower() == "üî•–ª—É—á—à–∞—è —Ä–µ–∫–ª–∞–º–∞üî•")
async def hanler_button_event( message: types.Message , state: FSMContext ):
    await state.set_state(eventState.sendKonkurs)

    video = types.FSInputFile("src/video/event_info.mp4")
    text = "–ü—Ä–∏–≤–µ—Ç! –û—Å—Ç–∞–≤–ª—è–π —Å–≤–æ—é –∑–∞—è–≤–∫—É –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ –Ω–∏–∂–µ.\n<b>–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ - —Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫ –≤—ã—à–µ</b>"
    await message.answer_video(video = video, 
                               caption = text, 
                               parse_mode = "html", 
                               height = 1038, 
                               width = 480, 
                               reply_markup = types.ReplyKeyboardMarkup(
                                    keyboard=[
                                            [
                                                types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞")
                                            ]
                                        ],
                                    resize_keyboard=True,
                                )
                            )


@router.message(eventState.sendKonkurs)
async def fsm_event(message: types.Message, state: FSMContext):
    if message.text and message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
        await message.answer(text = "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup = markup.mainMenu)
        await state.clear()
        return
    msg = await message.send_copy(chat_id = message.chat.id) #-1002165443440
    text = f"<b><code>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ö–û–ù–ö–£–†–°</code></b>\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: @{message.from_user.username} \
[ID: <a href=\"tg://user?id={message.from_user.id}\">{message.from_user.id}</a>]"
    await message.bot.send_message(chat_id = message.chat.id, text = text, # -1002165443440
                                   reply_to_message_id = msg.message_id, parse_mode = "html")
    await message.answer(text = "‚úÖ - –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!")
    await state.clear()

